{% extends 'Front_Base.html.twig' %}

{% block title %}My Tasks{% endblock %}

{% block body %}
<div class="container-fluid py-5 wow fadeInUp" data-wow-delay="0.1s">
    <div class="container">
        <div class="text-center mx-auto mb-5" style="max-width: 600px;">
            <h1 class="display-5 mb-0">My Tasks</h1>
            <hr class="w-25 mx-auto bg-primary">
        </div>

        <form class="mb-3">
            <div class="input-group">
                <input type="text" id="search-input" name="search" class="form-control" placeholder="Search tasks..." value="{{ search }}" autocomplete="off">
            </div>
        </form>
        <div id="tasks-list">
            <div class="row">
                {% for task in tasks %}
                    <div class="col-md-4 mb-4">
                        <div class="card h-100">
                            <div class="card-body">
                                <h5 class="card-title">{{ task.titreTache }}</h5>
                                <p class="card-text text-muted">
                                    <small>
                                        <i class="fas fa-calendar me-1"></i>
                                        Deadline: {{ task.deadline ? task.deadline|date('Y-m-d') : 'Not set' }}
                                    </small>
                                </p>
                                <p class="card-text">{{ task.descTache|slice(0, 100) }}...</p>
                                <div class="d-flex justify-content-between align-items-center">
                                    <div>
                                        <span class="badge bg-{{ task.statutTache == 'Completed' ? 'success' : 'primary' }}">
                                            {{ task.statutTache ?? 'Not Started' }}
                                        </span>
                                        <span class="badge bg-info ms-2">
                                            {{ task.priorite ?? 'No Priority' }}
                                        </span>
                                    </div>
                                    <div class="btn-group">
                                        <a href="{{ path('app_task_show', {'id_tache': task.idTache}) }}" class="btn btn-sm btn-outline-primary">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <a href="{{ path('app_task_edit', {'id_tache': task.idTache}) }}" class="btn btn-sm btn-outline-secondary">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                    </div>
                                </div>
                                <form method="POST" action="{{ path('app_task_update_progress', {'id_tache': task.idTache}) }}" class="mt-3 d-flex align-items-center">
                                    <input type="number" name="progression" min="0" max="100" value="{{ task.progression }}" class="form-control form-control-sm me-2" style="width: 80px;" {% if task.progression == 100 %}disabled{% endif %}>
                                    <button type="submit" class="btn btn-sm btn-success" {% if task.progression == 100 %}disabled{% endif %}>Update</button>
                                    <span class="ms-2">{{ task.progression }}%</span>
                                </form>
                            </div>
                        </div>
                    </div>
                {% else %}
                    <div class="col-12">
                        <div class="alert alert-info">
                            <i class="fas fa-info-circle me-2"></i>No tasks found.
                        </div>
                    </div>
                {% endfor %}
            </div>
            <div class="navigation">
                {{ knp_pagination_render(tasks) }}
            </div>
        </div>
    </div>

    <!-- Chatbot Section -->
    <div class="chatbot-container mt-5">
        <h2><i class="fas fa-robot me-2"></i>Need Help? Ask the Chatbot!</h2>
        <div id="chatbot" class="border rounded p-3" style="height: 400px; overflow-y: auto; background-color: #f8f9fa;">
            <!-- Chat messages will appear here -->
        </div>
        <div class="input-group mt-3">
            <input type="text" id="chatbot-input" class="form-control" placeholder="Type your question here...">
            <button id="chatbot-send" class="btn btn-primary">Send</button>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const searchInput = document.getElementById('search-input');
            let timeout = null;
            searchInput.addEventListener('input', function () {
                clearTimeout(timeout);
                timeout = setTimeout(function () {
                    const query = searchInput.value;
                    const url = new URL(window.location.href);
                    url.searchParams.set('search', query);
                    url.searchParams.set('page', 1);
                    fetch(url, { headers: { 'X-Requested-With': 'XMLHttpRequest' } })
                        .then(response => response.text())
                        .then(html => {
                            const parser = new DOMParser();
                            const doc = parser.parseFromString(html, 'text/html');
                            const newList = doc.getElementById('tasks-list');
                            document.getElementById('tasks-list').innerHTML = newList.innerHTML;
                        });
                }, 300); // Debounce for 300ms
            });
        });

        console.log('Script loaded'); // Debugging log to confirm script execution

        document.addEventListener('DOMContentLoaded', async function () {
            console.log('Chatbot script loaded'); // Debugging log

            const chatbot = document.getElementById('chatbot');

            // Fetch chat history
            try {
                const historyResponse = await fetch('/chatbot/history');
                console.log('Fetching chat history...'); // Debugging log
                const historyData = await historyResponse.json();

                if (historyResponse.status === 403) {
                    chatbot.innerHTML = '<div class="text-center text-danger">You must be logged in to use the chatbot.</div>';
                    return;
                }

                const history = historyData.history || [];
                history.forEach(entry => {
                    const messageDiv = document.createElement('div');
                    messageDiv.className = entry.role === 'user' ? 'text-end mb-2' : 'text-start mb-2';
                    messageDiv.innerHTML = `<span class="badge bg-${entry.role === 'user' ? 'primary' : 'secondary'}">${entry.content}</span>`;
                    chatbot.appendChild(messageDiv);
                });

                // Scroll to the bottom
                chatbot.scrollTop = chatbot.scrollHeight;

                // Greet the user
                const userGreeting = document.createElement('div');
                userGreeting.className = 'text-start mb-2';
                userGreeting.innerHTML = `<span class="badge bg-secondary">Hi, {{ app.user.name }}! How can I assist you today?</span>`;
                chatbot.appendChild(userGreeting);
            } catch (error) {
                console.error('Error fetching chat history:', error);
            }
        });

        document.getElementById('chatbot-send').addEventListener('click', async function () {
            console.log('Send button clicked'); // Debugging log

            const input = document.getElementById('chatbot-input');
            const message = input.value.trim();
            if (!message) {
                console.log('No message entered'); // Debugging log
                return;
            }

            // Display user message
            const chatbot = document.getElementById('chatbot');
            const userMessage = document.createElement('div');
            userMessage.className = 'text-end mb-2';
            userMessage.innerHTML = `<span class="badge bg-primary">${message}</span>`;
            chatbot.appendChild(userMessage);

            // Clear input
            input.value = '';

            // Call DeepSeek API
            try {
                console.log('Sending message to /chatbot endpoint...'); // Debugging log
                const response = await fetch('/chatbot', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ message }),
                });

                if (!response.ok) {
                    throw new Error('Failed to communicate with the chatbot.');
                }

                const data = await response.json();
                console.log('Received response from /chatbot:', data); // Debugging log
                const botMessage = document.createElement('div');
                botMessage.className = 'text-start mb-2';
                botMessage.innerHTML = `<span class="badge bg-secondary">${data.response}</span>`;
                chatbot.appendChild(botMessage);

                // Scroll to the bottom
                chatbot.scrollTop = chatbot.scrollHeight;
            } catch (error) {
                console.error('Error communicating with chatbot:', error);
                const errorMessage = document.createElement('div');
                errorMessage.className = 'text-start mb-2 text-danger';
                errorMessage.innerHTML = `<span class="badge bg-danger">Error: Unable to communicate with the chatbot.</span>`;
                chatbot.appendChild(errorMessage);
            }
        });
    </script>
{% endblock %}