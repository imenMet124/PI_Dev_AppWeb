{% extends 'Back_Base.html.twig' %}

{% block title %}Candidatures re√ßues{% endblock %}

{% block body %}
<div class="main-panel">
  <div class="content">
    <div class="container mt-4">

      <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="fw-bold mb-0">Candidatures re√ßues</h2>
      </div>

      <!-- Formulaire de recherche et filtre -->
      <form id="filter-form" method="get" action="{{ path('app_application_index') }}" class="d-flex align-items-center mb-4 gap-2">

        <input type="text" name="search" class="form-control" placeholder="Rechercher un candidat..." value="{{ app.request.get('search') }}">

        <select name="status" class="form-select">
            <option value="">ALL</option>
            <option value="En attente" {% if app.request.get('status') == 'En attente' %}selected{% endif %}>En attente</option>
            <option value="Accept√©e" {% if app.request.get('status') == 'Accept√©e' %}selected{% endif %}>Accept√©e</option>
            <option value="Refus√©e" {% if app.request.get('status') == 'Refus√©e' %}selected{% endif %}>Refus√©e</option>
        </select>

        <button class="btn btn-primary" type="submit">
          <i class="bi bi-search"></i> Filtrer
        </button>

      </form>

      <!-- Ici on recharge dynamiquement seulement le tableau -->
      <div id="table-container">
        {% include 'application/_table.html.twig' %}
      </div>

    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    // üéØ Gestion AJAX du formulaire de filtre
    const form = document.getElementById('filter-form');
    form.addEventListener('submit', function(e) {
      e.preventDefault();
  
      const url = new URL(form.action);
      const params = new URLSearchParams(new FormData(form));
      url.search = params.toString();
  
      fetch(url, { headers: { 'X-Requested-With': 'XMLHttpRequest' } })
        .then(response => response.text())
        .then(html => {
          document.getElementById('table-container').innerHTML = html;
          attachSortableColumnHandlers(); // ‚ö° rebrancher les colonnes apr√®s rechargement
        })
        .catch(error => console.error('Erreur AJAX', error));
    });
  
    // üéØ Gestion AJAX du tri par colonnes
    function attachSortableColumnHandlers() {
      document.querySelectorAll('a.sortable-column').forEach(function(link) {
        link.addEventListener('click', function(e) {
          e.preventDefault();
          fetch(link.href, { headers: { 'X-Requested-With': 'XMLHttpRequest' } })
            .then(response => response.text())
            .then(html => {
              document.getElementById('table-container').innerHTML = html;
              attachSortableColumnHandlers(); // ‚ö° reboucler apr√®s mise √† jour
            })
            .catch(error => console.error('Erreur AJAX:', error));
        });
      });
    }
  
    // Initialiser au chargement
    attachSortableColumnHandlers();
  });
  </script>
  
{% endblock %}
